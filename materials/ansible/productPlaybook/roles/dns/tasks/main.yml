---
- name: Install DNS server package
  ansible.builtin.apt:
    name: "{{ item }}"
    state: latest
    update_cache: yes
    cache_valid_time: 36000
  loop:
    - "{{ service_name }}"

- name: Ensure BIND service is started and enabled
  ansible.builtin.service:
    name: "{{ service_name }}"
    state: started
    enabled: yes

- name: Generate zone files from templates
  ansible.builtin.template:
    src: "templates/{{ item }}"
    dest: "/etc/bind/{{ item.split('.')[:-1] | join('.') }}"
    owner: root
    group: bind
    mode: 0660
  loop:
    - db.zone.dns.j2
    - db.zone.dns.rev.j2
  notify:
    - restart bind

- name: Add info about new zone in config
  ansible.builtin.blockinfile:
    path: /etc/bind/named.conf.local
    insertbefore: BOF
    marker: "// {mark} ANSIBLE MANAGED BLOCK"
    block: |
      zone "{{ domain_zone }}"  { type master; file "/etc/bind/db.zone.dns"; };
      zone "{{ network.split('.0')[0].split('.')[-1::-1] | join('.') }}.in-addr.arpa"  { type master; file "/etc/bind/db.zone.dns.rev"; };
    state: present
  notify:
    - restart bind

- name: Copy general BIND config
  ansible.builtin.copy:
    src: files/named.conf.options
    dest: /etc/bind/
    owner: root
    group: bind
    mode: 0644
  notify:
    - restart bind

- name: Check validity of named.conf
  ansible.builtin.command: named-checkconf
  register: bind9_reg_named_checkconf
  changed_when: False

- name: Check validity of zone file
  ansible.builtin.command: named-checkzone {{ domain_zone }} /etc/bind/db.zone.dns
  register: bind9_reg_named_checkzone
  changed_when: False

- name: Check validity of reverse zone file
  ansible.builtin.command: named-checkzone {{ network.split('.0')[0].split('.')[-1::-1] | join('.') }}.in-addr.arpa. /etc/bind/db.zone.dns.rev
  register: bind9_reg_named_checkzone
  changed_when: False
